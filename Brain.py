#Brain.py
#The Node classes would benefit slightly from inheritance, but I think it 
#will keep things simple if they are all seperate.  It is a small system,
#inheritance won't make that big of a difference.

#------------------------------------------------------------------------------
class Brain():
  '''
  The 'Brain' is the controller for all the pieces of the FPNA.  The Nodes
  and the Links.
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

  #----------------------------------------------------------------------------  
  def activate(self):
    return

#------------------------------------------------------------------------------
class InputNode():
  '''
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

#------------------------------------------------------------------------------
class HiddenNode():
  '''
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

#------------------------------------------------------------------------------
class OutputNode():
  '''
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

#------------------------------------------------------------------------------
class Activator():
  '''
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

#------------------------------------------------------------------------------
class Link():
  '''
  '''
  #----------------------------------------------------------------------------  
  def __init__(self, name = None):
    return

  #----------------------------------------------------------------------------  
  def __str__(self):
    return self.name
  def __repr__(self):
    return self.__str__()

#program entry
#==============================================================================
